# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/#DeploymentSpec
apiVersion: apps/v1
kind: DeploymentList
metadata: # ListMeta
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata: # ObjectMeta
      name: tdd-detroid-deployment
      labels:
        app: tdd-detroid
    spec: # DeploymentSpec
      selector: # LabelSelector
        matchLabels:
          app: tdd-detroid
      template: # PodTemplateSpec
        metadata: # ObjectMeta
          name: tdd-detroid
          labels:
            app: tdd-detroid
        spec: # PodSpec
          containers: # Containers
            - name: tdd-detroid
              image: douglasdcm/tdd-detroid
              ports:
                - containerPort: 5000
  - apiVersion: apps/v1
    kind: Deployment
    metadata: # ObjectMeta
      name: tdd-postgrest-deployment
      labels:
        app: tdd-detroid
    spec: # DeploymentSpec
      selector: # LabelSelector
        matchLabels:
          app: tdd-detroid
      template: # PodTemplateSpec
        metadata: # ObjectMeta
          name: tdd-detroid
          labels:
            app: tdd-detroid
        spec: # PodSpec
          containers: # Containers
            - name: tdd-postgrest
              image: douglasdcm/tdd-postgrest
              ports:
                - containerPort: 3000
  - apiVersion: apps/v1
    kind: Deployment
    metadata: # ObjectMeta
      name: postgres-deployment
      labels:
        app: tdd-detroid
    spec: # DeploymentSpec
      selector: # LabelSelector
        matchLabels:
          app: tdd-detroid
      template: # PodTemplateSpec
        metadata: # ObjectMeta
          name: postgres
          labels:
            app: tdd-detroid
        spec: # PodSpec
          containers: # Containers
            - name: postgres
              image: postgres # Docker image
              imagePullPolicy: "IfNotPresent"
              ports:
                - containerPort: 5432 # Exposing the container port 5432 for PostgreSQL client connections.
              envFrom:
                - configMapRef:
                    name: postgres-secret # Using the ConfigMap postgres-secret
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: postgresdata
          volumes:
            - name: postgresdata
              persistentVolumeClaim:
                claimName: postgres-volume-claim